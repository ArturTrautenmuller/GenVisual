#pragma checksum "C:\Users\artur\source\repos\MostEficientRoute\GenVisual\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "06ba8cff7d51b0e30155ef7de2508f6a5e19d397"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\artur\source\repos\MostEficientRoute\GenVisual\Views\_ViewImports.cshtml"
using GenVisual;

#line default
#line hidden
#line 2 "C:\Users\artur\source\repos\MostEficientRoute\GenVisual\Views\_ViewImports.cshtml"
using GenVisual.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"06ba8cff7d51b0e30155ef7de2508f6a5e19d397", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"31ddd5ca6b66e0f4cf93b915786ebf4167e91c35", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/LTE/plugins/fontawesome-free/css/all.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/LTE/dist/css/adminlte.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/LTE/plugins/jquery/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/LTE/plugins/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/LTE/plugins/bs-custom-file-input/bs-custom-file-input.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/LTE/dist/js/adminlte.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/LTE/dist/js/demo.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/js/Variables.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/js/Operations.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/js/CanvasController.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/GenVisual/LTE/plugins/chart.js/Chart.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(0, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(2, 87, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "ce493ea7ea334b19804278ee12342dad", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(89, 143, true);
            WriteLiteral("\r\n<!-- Ionicons -->\r\n<link rel=\"stylesheet\" href=\"https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css\">\r\n<!-- Theme style -->\r\n");
            EndContext();
            BeginContext(232, 72, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "b6258d818c004c65a5b8227561b76521", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(304, 7457, true);
            WriteLiteral(@"
<!-- Google Font: Source Sans Pro -->
<link href=""https://fonts.googleapis.com/css?family=Source+Sans+Pro:300,400,400i,700"" rel=""stylesheet"">


<style>
    #overlay {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5);
        z-index: 2;
        cursor: pointer;
    }

    #text {
        position: absolute;
        top: 50%;
        left: 50%;
        font-size: 30px;
        color: white;
        transform: translate(-50%,-50%);
        -ms-transform: translate(-50%,-50%);
    }
</style>


<div id=""overlay"">

    <div id=""text""><div style=""margin-left:22px"" class=""loader""></div> Calculando...</div>
</div>



<div style=""display:flex"">
    <div id=""DataDiv"" style=""width:15%;margin-left:10px"">

        <label>Qtde Pontos: </label><br />
        <input id=""target"" style=""width:70%"" value=""10"" type=""number"" step=""1"" m");
            WriteLiteral(@"in=""2"" max=""25"" class=""form-control"" /><br />
        <label>População: </label><br />
        <input id=""population"" style=""width:70%"" value=""100"" type=""number"" step=""1"" min=""5"" max=""500"" class=""form-control"" /><br />
        <label>N° Gerações: </label><br />
        <input id=""generation"" style=""width:70%"" value=""100"" type=""number"" step=""1"" min=""5"" max=""200"" class=""form-control"" /><br />
        <label>Taxa de Mutação (%): </label><br />
        <input id=""mutation"" style=""width:70%"" value=""10"" type=""number"" step=""1"" min=""1"" max=""100"" class=""form-control"" /><br />
        <div style=""display:flex"">
        <button class=""btn btn-primary"" onclick=""Execute()"">Executar</button>

        <button class=""btn btn-primary"" onclick=""ExecuteCustom()"" style=""margin-left:12px"">Atualizar</button>
            </div>

    </div>
    <div id=""Analytics"" style=""width:80%;margin-left:10px"">
        <div style=""display:flex"">
            <div id=""Map"">
                <canvas id=""MapCanvas"" width=""300"" heigh");
            WriteLiteral(@"t=""300"" style=""border:1px solid #000000""></canvas>
            </div>
            <div style=""margin-left:12px;width:800px"">
                <div style=""display:flex"">
                    <select id=""selectGen"" onchange=""changeGen()"" class=""form-control"" style=""width:200px""></select>
                    <button id=""playButton"" class=""btn btn-block btn-success"" style=""margin-left:15px;width:50px"" onclick=""PlaySlide()""><i id=""playIcon"" class=""fas fa-play""></i></button>
                </div>
                <br />

                <div class=""row"">
                    <div class=""col-12 col-sm-6 col-md-3"">
                        <div class=""info-box"">
                            
                            <div class=""info-box-content"">
                                <span class=""info-box-text"">Menor Distância</span>
                                <span id=""minLength"" class=""info-box-number"">
                                    0
                                   
                        ");
            WriteLiteral(@"        </span>
                            </div>
                            <!-- /.info-box-content -->
                        </div>
                        <!-- /.info-box -->
                    </div>
                    <!-- /.col -->
                    <!-- fix for small devices only -->
                    <div class=""clearfix hidden-md-up""></div>
                    <div class=""col-12 col-sm-6 col-md-3"">
                        <div class=""info-box mb-3"">
                           
                            <div class=""info-box-content"">
                                <span class=""info-box-text"">Distância Média</span>
                                <span id=""avgLength"" class=""info-box-number"">0</span>
                            </div>
                            <!-- /.info-box-content -->
                        </div>
                        <!-- /.info-box -->
                    </div>
                    <!-- /.col -->
                    <div class=""col-12 col-sm-");
            WriteLiteral(@"6 col-md-3"">
                        <div class=""info-box mb-3"">
                           
                            <div class=""info-box-content"">
                                <span class=""info-box-text"">Maior Distância</span>
                                <span id=""maxLength"" class=""info-box-number"">0</span>
                            </div>
                            <!-- /.info-box-content -->
                        </div>
                        <!-- /.info-box -->
                    </div>
                    <!-- /.col -->
                </div>



                <div class=""row"">
                    <div class=""col-12 col-sm-6 col-md-3"">
                        <div class=""info-box"">
                            
                            <div class=""info-box-content"">
                                <span class=""info-box-text"">Rotas Distintas</span>
                                <span id=""popDistinct"" class=""info-box-number"">
                                   ");
            WriteLiteral(@" 0
                                   
                                </span>
                            </div>
                            <!-- /.info-box-content -->
                        </div>
                        <!-- /.info-box -->
                    </div>
                    <!-- /.col -->
                    <!-- fix for small devices only -->
                    <div class=""clearfix hidden-md-up""></div>
                    <div class=""col-12 col-sm-6 col-md-3"">
                        <div class=""info-box mb-3"">
                           
                            <div class=""info-box-content"">
                                <span class=""info-box-text"">Variação</span>
                                <span id=""variacao"" class=""info-box-number"">0.0 %</span>
                                
                            </div>
                            <!-- /.info-box-content -->
                        </div>
                        <!-- /.info-box -->
               ");
            WriteLiteral(@"     </div>
                    <!-- /.col -->
                    <div class=""col-12 col-sm-6 col-md-3"">
                        <div class=""info-box mb-3"">
                            
                            <div class=""info-box-content"">
                                <span class=""info-box-text"">Desvio Padrão</span>
                                <span id=""dp"" class=""info-box-number"">0</span>
                            </div>
                            <!-- /.info-box-content -->
                        </div>
                        <!-- /.info-box -->
                    </div>
                    <!-- /.col -->
                </div>

            </div>
        </div>
        <div id=""Graph"">
            <div class=""card card-primary card-outline"">
                <div class=""card-header"">
                    <h3 class=""card-title"">Evolução</h3>
                    
                </div>
                <div class=""card-body"">
                    <div class=""chart"">
 ");
            WriteLiteral(@"                       <canvas id=""evolution"" style=""min-height: 300px; height: 300px; max-height: 300px; max-width: 100%;""></canvas>
                    </div>
                </div>
                <!-- /.card-body -->
            </div>
        </div>

    </div>

</div>


");
            EndContext();
            BeginContext(7761, 68, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c252387a6acf4c419247c119849a48b8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7829, 24, true);
            WriteLiteral("\r\n<!-- Bootstrap 4 -->\r\n");
            EndContext();
            BeginContext(7853, 84, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "80405077bbe84ba290b2c5f409b84e6e", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(7937, 33, true);
            WriteLiteral("\r\n<!-- bs-custom-file-input -->\r\n");
            EndContext();
            BeginContext(7970, 96, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "42924a0ca2df48af912c3af3f0c07ca8", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8066, 25, true);
            WriteLiteral("\r\n<!-- AdminLTE App -->\r\n");
            EndContext();
            BeginContext(8091, 63, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e7af9e9cd5bf4896ba2900a0e5aa87c6", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8154, 39, true);
            WriteLiteral("\r\n<!-- AdminLTE for demo purposes -->\r\n");
            EndContext();
            BeginContext(8193, 55, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "953a07d18bee4629951813a4f128894b", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8248, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(8250, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "da5af2ffb94040c6beafd62abb495c50", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8301, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(8303, 52, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "534ff42318894971988b7748a81f3a12", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8355, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(8357, 58, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "09ce03146f02459dbafc446443afb5e5", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8415, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(8417, 69, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a4d24799b4b44bcab610567884b53828", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8486, 11810, true);
            WriteLiteral(@"
<script>
    function on() {
        document.getElementById(""overlay"").style.display = ""block"";
    }

    function off() {
        document.getElementById(""overlay"").style.display = ""none"";
    }
</script>


<script>
    function changeGen() {
        var gen = document.getElementById(""selectGen"").value;
        buildMap(gen);
        if (gen != -1) {
            setIndicators(gen);
        }
    }
    function buildSelectGen() {

        var content = document.getElementById(""selectGen"");
        while (content.firstChild) {
            content.removeChild(content.lastChild);
        }

        var genQtd = log[""genInfos""].length;

        var opt = document.createElement(""option"");
        opt.innerHTML = ""Mapa"";
        opt.setAttribute(""value"",-1);
        content.appendChild(opt);

        for (var i = 1; i <= genQtd; i++) {
            var opt = document.createElement(""option"");
            opt.innerHTML = ""Geração "" + i;
            opt.setAttribute(""value"", i - ");
            WriteLiteral(@"1);
            content.appendChild(opt);

        }
    }

    function setIndicators(generation) {
        log[""genInfos""][0]

        document.getElementById(""minLength"").innerHTML = log[""genInfos""][generation][""minLength""].toFixed(0);
        document.getElementById(""avgLength"").innerHTML = log[""genInfos""][generation][""avgLength""].toFixed(0);
        document.getElementById(""maxLength"").innerHTML = log[""genInfos""][generation][""maxLength""].toFixed(0);
        var routes = log[""genInfos""][generation][""routes""];
        document.getElementById(""popDistinct"").innerHTML = countDistinctRoutes(routes);
        var variacao = ((1 - (log[""genInfos""][generation][""minLength""] / log[""genInfos""][0][""minLength""])) * 100).toFixed(1);
        document.getElementById(""variacao"").innerHTML = variacao + "" %"";

        var routesLength = [];
        for (var i = 0; i < log[""genInfos""][generation][""routes""].length; i++) {
            routesLength.push(log[""genInfos""][generation][""routes""][i][""length""]);
  ");
            WriteLiteral(@"      }

        var dp = DesvioPadrao(routesLength);
        document.getElementById(""dp"").innerHTML = dp.toFixed(2);

    }

    function buildEvolution() {
        /* ChartJS
            * -------
            * Here we will create a few charts using ChartJS
            */

        //--------------
        //- AREA CHART -
        //--------------

        // Get context with jQuery - using jQuery's .get() method.

        var evCanvas = document.getElementById(""evolution"");
        var pEvCanvas = evCanvas.parentElement;
        evCanvas.remove();
        var newEvCanvas = document.createElement(""canvas"");
        newEvCanvas.setAttribute(""id"", ""evolution"");
        newEvCanvas.style.minHeight = '300px';
        newEvCanvas.style.height = '300px';
        newEvCanvas.style.maxHeight = '300px';
        newEvCanvas.style.maxWidth = '100%';
        pEvCanvas.appendChild(newEvCanvas);
        // <canvas id=""effortChart"" style=""min-height: 450px; height: 450px; max-height: 450px; ma");
            WriteLiteral(@"x-width: 100%;""></canvas>


        var labels = [];
        var minScore = [];
        var maxScore = [];
        var avgScore = [];
        var genQtd = log[""genInfos""].length;

        for (var i = 0; i < genQtd; i++) {
            labels.push(log[""genInfos""][i][""generation""]);
            minScore.push(log[""genInfos""][i][""minLength""].toFixed(0));
            maxScore.push(log[""genInfos""][i][""maxLength""].toFixed(0));
            avgScore.push(log[""genInfos""][i][""avgLength""].toFixed(0));
        }


        var areaChartData = {
            labels: labels,
            datasets: [
                {
                    label: 'Menor Distância',
                    backgroundColor: 'rgba(60,141,188,0.9)',
                    borderColor: 'rgba(60,141,188,0.8)',
                    pointRadius: false,
                    pointColor: '#3b8bba',
                    pointStrokeColor: 'rgba(60,141,188,1)',
                    pointHighlightFill: '#fff',
                    pointHighlight");
            WriteLiteral(@"Stroke: 'rgba(60,141,188,1)',
                    data: minScore
                },
                {
                    label: 'Média',
                    backgroundColor: 'rgba(210, 214, 222, 1)',
                    borderColor: 'rgba(210, 214, 222, 1)',
                    pointRadius: false,
                    pointColor: 'rgba(210, 214, 222, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,220,1)',
                    data: avgScore
                },
                {
                    label: 'Maior',
                    backgroundColor: 'rgba(210, 214, 222, 1)',
                    borderColor: 'rgba(210, 214, 222, 1)',
                    pointRadius: false,
                    pointColor: 'rgba(210, 214, 222, 1)',
                    pointStrokeColor: '#c1c7d1',
                    pointHighlightFill: '#fff',
                    pointHighlightStroke: 'rgba(220,220,2");
            WriteLiteral(@"20,1)',
                    data: maxScore
                }
            ]
        }

        var areaChartOptions = {
            maintainAspectRatio: false,
            responsive: true,
            legend: {
                display: false
            },
            scales: {
                xAxes: [{
                    gridLines: {
                        display: false,
                    }
                }],
                yAxes: [{
                    gridLines: {
                        display: false,
                    }
                }]
            }
        }

        // This will get the first returned node in the jQuery collection.


        //-------------
        //- LINE CHART -
        //--------------

        var lineChartCanvas = $('#evolution').get(0).getContext('2d')
        var lineChartOptions = jQuery.extend(true, {}, areaChartOptions)
        var lineChartData = jQuery.extend(true, {}, areaChartData)
        lineChartData.datasets[0].fill = ");
            WriteLiteral(@"false;
        lineChartData.datasets[1].fill = false;
        lineChartData.datasets[2].fill = false;
        lineChartOptions.datasetFill = false

        var lineChart = new Chart(lineChartCanvas, {
            type: 'line',
            data: lineChartData,
            options: lineChartOptions
        })

        //-------------
        //- DONUT CHART -
        //-------------
        // Get context with jQuery - using jQuery's .get() method.
    }
    function buildMap(generation) {
        var canvasmap = document.getElementById(""MapCanvas"");
        var ctx = canvasmap.getContext(""2d"");
        ctx.clearRect(0, 0, canvasWidth, canvasHeight);

        var targetsQtd = Object.keys(log[""map""][""targets""]).length;
        for (var i = 1; i <= targetsQtd; i++) {
            ctx.beginPath();
            var x = log[""map""][""targets""][i][""coordenates""][""x""] * canvasWidth / mapMilesRangeX;
            var y = log[""map""][""targets""][i][""coordenates""][""y""] * canvasHeight / mapMilesRangeY;");
            WriteLiteral(@"
            ctx.arc(x, y, circleRadius, 0, 2 * Math.PI);
            ctx.fillStyle = ""#000000"";
            ctx.fill();
        }

        if (generation != -1) {
            var routes = log[""genInfos""][generation][""routes""];
            var shortestRoute = findShortestRoute(routes);

            for (var i = 0; i < shortestRoute[""targetsPoint""].length - 1; i++) {
                var a = shortestRoute[""targetsPoint""][i];
                var b = shortestRoute[""targetsPoint""][i + 1];

                var xa = log[""map""][""targets""][a][""coordenates""][""x""] * canvasWidth / mapMilesRangeX;
                var ya = log[""map""][""targets""][a][""coordenates""][""y""] * canvasHeight / mapMilesRangeY;
                var xb = log[""map""][""targets""][b][""coordenates""][""x""] * canvasWidth / mapMilesRangeX;
                var yb = log[""map""][""targets""][b][""coordenates""][""y""] * canvasHeight / mapMilesRangeY;

                ctx.beginPath();
                ctx.moveTo(xa, ya);
                ctx.lineTo(xb, yb)");
            WriteLiteral(@";
                ctx.stroke();

            }
        }

        

    }

    function PlaySlide() {
        document.getElementById(""playButton"").setAttribute(""onclick"", ""StopSlide()"");
        document.getElementById(""playButton"").setAttribute(""class"", ""btn btn-block btn-danger"");
        document.getElementById(""playIcon"").setAttribute(""class"", ""fas fa-stop"");
        playSlideEvent = setTimeout(PassSlide, 200);
    }

    function StopSlide() {
        document.getElementById(""playButton"").setAttribute(""onclick"", ""PlaySlide()"");
        document.getElementById(""playButton"").setAttribute(""class"", ""btn btn-block btn-success"");
        document.getElementById(""playIcon"").setAttribute(""class"", ""fas fa-play"");
        clearTimeout(playSlideEvent);
    }

    function PassSlide() {
        var genQtd = log[""genInfos""].length;
        var cSlide = parseInt(document.getElementById(""selectGen"").value);
        if (cSlide == genQtd - 1) {
            StopSlide();
            return;
 ");
            WriteLiteral(@"       }
        cSlide++;
        document.getElementById(""selectGen"").value = cSlide;
        buildMap(cSlide);
        if (cSlide != -1) {
            setIndicators(cSlide);
        }
        playSlideEvent = setTimeout(PassSlide, 500);

    }

   



    function Execute(){

        on();
        var target = document.getElementById(""target"").value;
        var population = document.getElementById(""population"").value;
        var generation = document.getElementById(""generation"").value;
        var mutation = document.getElementById(""mutation"").value;

        $.ajax(
            {
                type: 'POST',
                url: 'GenVisual/Gen/Execute?target=' + target + '&population=' + population + '&generations=' + generation + '&mutation=' + mutation,
                dataType: 'json',
                cache: false,
                async: true,
                success: function (data) {

                    log = data;
                    buildMap(-1);
              ");
            WriteLiteral(@"      buildEvolution();
                    buildSelectGen();
                    document.getElementById(""selectGen"").value = -1;
                    setIndicators(log[""genInfos""].length - 1);
                    customMap = JSON.parse(JSON.stringify(log.map));
                    off();
                }

            });


    }

    function ExecuteCustom() {

        on();
        var target = document.getElementById(""target"").value;
        var population = document.getElementById(""population"").value;
        var generation = document.getElementById(""generation"").value;
        var mutation = document.getElementById(""mutation"").value;

        $.ajax(
            {
                type: 'POST',
                url: 'GenVisual/Gen/ExecuteCustom?target=' + target + '&population=' + population + '&generations=' + generation + '&mutation=' + mutation,
                dataType: 'json',
                cache: false,
                async: true,
                contentType: ""applicat");
            WriteLiteral(@"ion/json"",
                success: function (data) {

                    log = data;
                    buildMap(-1);
                    buildEvolution();
                    buildSelectGen();
                    document.getElementById(""selectGen"").value = -1;
                    setIndicators(log[""genInfos""].length - 1);
                    customMap = JSON.parse(JSON.stringify(log.map));
                    off();
                },
                data: JSON.stringify(log.map)

            });


    }
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
